{"version":3,"sources":["data/gamine.csv","data/hookfish.csv","components/Filters.js","components/RangeBarGraph.js","App.js","reportWebVitals.js","index.js"],"names":["Filters","props","restauraunt","employmentType","gender","Dropdown","Toggle","variant","id","Menu","Item","onClick","onChangeRestaurant","onChangeEmploymentType","onChangeGender","RangeBarGraph","useState","data","setData","setRestauraunt","setEmploymentType","setGender","useEffect","fetchData","a","formattedData","d3","hookfishData","gamineData","salary","level","employeeGender","roleEmploymentType","currMin","currMax","values","type","Math","min","parseInt","max","res","Object","sort","value","push","className","event","location","target","textContent","selectedGender","reverse","xField","yField","isRange","label","position","layout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2362e70b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/gamine.4dc28026.csv\";","export default __webpack_public_path__ + \"static/media/hookfish.0402614d.csv\";","import React from \"react\";\n\nimport { Dropdown } from \"react-bootstrap\";\n\nconst Filters = (props) => {\n  const restauraunt = props.restauraunt;\n  const employmentType = props.employmentType;\n  const gender = props.gender;\n\n  return (\n    <div>\n      <Dropdown>\n        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n          {restauraunt || \"Select Restaurant\"}\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          <Dropdown.Item onClick={props.onChangeRestaurant}>\n            {\"Gamine\"}\n          </Dropdown.Item>\n          <Dropdown.Item onClick={props.onChangeRestaurant}>\n            {\"Hookfish\"}\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n      <Dropdown>\n        <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\n          {employmentType || \"Select Employment Type\"}\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          <Dropdown.Item onClick={props.onChangeEmploymentType}>\n            {\"Part Time\"}\n          </Dropdown.Item>\n          <Dropdown.Item onClick={props.onChangeEmploymentType}>\n            {\"Full Time\"}\n          </Dropdown.Item>\n          <Dropdown.Item onClick={props.onChangeEmploymentType}>\n            {\"Contractor\"}\n          </Dropdown.Item>\n          <Dropdown.Item onClick={props.onChangeEmploymentType}>\n            {\"All\"}\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n      <Dropdown>\n        <Dropdown.Toggle variant=\"danger\" id=\"dropdown-basic\">\n          {gender || \"Select Gender\"}\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          <Dropdown.Item onClick={props.onChangeGender}>{\"Male\"}</Dropdown.Item>\n          <Dropdown.Item onClick={props.onChangeGender}>\n            {\"Female\"}\n          </Dropdown.Item>\n          <Dropdown.Item onClick={props.onChangeGender}>{\"All\"}</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    </div>\n  );\n};\n\nexport default Filters;\n","import React, { useState, useEffect } from \"react\";\nimport { Bar } from \"@ant-design/charts\";\n\nimport * as d3 from \"d3\";\nimport gamineData from \"./../data/gamine.csv\";\nimport hookfishData from \"./../data/hookfish.csv\";\n\nimport Filters from \"./Filters\";\n\nconst DEFAULT_RESTAURANT = \"Hookfish\";\n\nconst RangeBarGraph = () => {\n  const [data, setData] = useState([]);\n  const [restauraunt, setRestauraunt] = useState(DEFAULT_RESTAURANT);\n  const [employmentType, setEmploymentType] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const formattedData = {};\n\n      await d3.csv(\n        restauraunt === \"Hookfish\" ? hookfishData : gamineData,\n        function (data) {\n          const salary = data?.salary || \"\";\n          const level = data?.level || \"\";\n          const employeeGender = data?.gender || \"\";\n          const roleEmploymentType = data?.employmentType || \"\";\n\n          // Filter by Employment\n          if (\n            (employmentType &&\n              roleEmploymentType === \"contractor\" &&\n              employmentType !== \"Contractor\") ||\n            (roleEmploymentType === \"fullTime\" &&\n              employmentType !== \"Full Time\") ||\n            (roleEmploymentType === \"Part time\" &&\n              employmentType !== \"Part Time\")\n          ) {\n            return;\n          }\n\n          // Filter by Gender\n          if (gender && employeeGender !== gender) {\n            return;\n          }\n\n          if (level && salary) {\n            let currMin = salary;\n            let currMax = salary;\n            if (formattedData[level]) {\n              currMin = formattedData[level].values[0];\n              currMax = formattedData[level].values[1];\n            }\n\n            formattedData[level] = {\n              type: `Level ${level}`,\n              values: [\n                Math.min(currMin, parseInt(salary)),\n                Math.max(currMax, parseInt(salary)),\n              ],\n            };\n          }\n        }\n      );\n\n      const res = [];\n      const values = Object.values(formattedData);\n      values.sort();\n\n      for (const value of values) {\n        res.push(value);\n      }\n\n      setData(res);\n    };\n\n    fetchData();\n  }, [restauraunt, employmentType, gender]);\n\n  const onChangeRestaurant = (event) => {\n    const location = event.target.textContent;\n    setRestauraunt(location);\n  };\n\n  const onChangeEmploymentType = (event) => {\n    const employmentType = event.target.textContent;\n    setEmploymentType(employmentType === \"All\" ? \"\" : employmentType);\n  };\n\n  const onChangeGender = (event) => {\n    const selectedGender = event.target.textContent;\n    setGender(selectedGender === \"All\" ? \"\" : selectedGender);\n  };\n\n  return (\n    <div className=\"range-chart\">\n      <div className=\"range-chart-header\">\n        <h2 className=\"range-chart-title\">Salary Range Chart</h2>\n        <Filters\n          restauraunt={restauraunt}\n          employmentType={employmentType}\n          gender={gender}\n          onChangeRestaurant={onChangeRestaurant}\n          onChangeEmploymentType={onChangeEmploymentType}\n          onChangeGender={onChangeGender}\n        />\n      </div>\n      <Bar\n        data={data.reverse()}\n        xField=\"values\"\n        yField=\"type\"\n        isRange={true}\n        label={{\n          position: \"middle\",\n          layout: [{ type: \"adjust-color\" }],\n        }}\n      />\n    </div>\n  );\n};\n\nexport default RangeBarGraph;\n","import \"./App.css\";\n\nimport RangeBarGraph from \"./components/RangeBarGraph\";\n\nfunction App() {\n  return <RangeBarGraph />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"./App.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}